DROP TABLE IF EXISTS quotes_locales;
DROP TABLE IF EXISTS quotes;
DROP TABLE IF EXISTS works_locales;
DROP TABLE IF EXISTS works;
DROP TABLE IF EXISTS authors_locales;
DROP TABLE IF EXISTS authors;

CREATE TABLE authors (
	`id` INTEGER AUTO_INCREMENT NOT NULL,
	`slug` VARCHAR(255) UNIQUE NOT NULL,
	`wikidata_id` INTEGER UNIQUE,
	`image` LONGBLOB,
	`image_attribution` VARCHAR(255) DEFAULT 'Unspecified',
	PRIMARY KEY (`id`)
);
CREATE TABLE authors_locales (
	`id` INTEGER AUTO_INCREMENT NOT NULL,
	`author_id` INTEGER NOT NULL,
	`language` VARCHAR(2) NOT NULL,
	`name` VARCHAR(255) NOT NULL,
	`href` VARCHAR(255),
	PRIMARY KEY (`id`),
	CONSTRAINT `FK_AUTHORS_LOCALES` FOREIGN KEY (`author_id`) REFERENCES `authors` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE works (
	`id` INTEGER AUTO_INCREMENT NOT NULL,
	`author_id` INTEGER NOT NULL,
	`slug` VARCHAR(255) UNIQUE NOT NULL,
	`wikidata_id` INTEGER UNIQUE,
	PRIMARY KEY (`id`),
	CONSTRAINT `FK_WORKS_AUTHOR` FOREIGN KEY (`author_id`) REFERENCES `authors` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE works_locales (
	`id` INTEGER AUTO_INCREMENT NOT NULL,
	`work_id` INTEGER NOT NULL,
	`language` VARCHAR(2) NOT NULL,
	`name` VARCHAR(255) NOT NULL,
	`href` VARCHAR(255),
	PRIMARY KEY (`id`),
	CONSTRAINT `FK_WORKS_LOCALES` FOREIGN KEY (`work_id`) REFERENCES `works` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE quotes (
	`id` INTEGER AUTO_INCREMENT NOT NULL,
	`work_id` INTEGER NOT NULL,
	PRIMARY KEY (`id`),
	CONSTRAINT `FK_QUOTES_WORK` FOREIGN KEY (`work_id`) REFERENCES `works` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE quotes_locales (
	`id` INTEGER AUTO_INCREMENT NOT NULL,
	`quote_id` INTEGER NOT NULL,
	`language` VARCHAR(2) NOT NULL,
	`schedule` VARCHAR(5) NOT NULL,
	`corpus` TEXT NOT NULL,
	`href` VARCHAR(255),
	`meta` VARCHAR(255),
	`year` INTEGER,
	`time` VARCHAR(8),
	`locked` BOOLEAN DEFAULT 1,
	`curator` VARCHAR(25) DEFAULT NULL,
	PRIMARY KEY (`id`),
	CONSTRAINT `FK_QUOTES_LOCALES` FOREIGN KEY (`quote_id`) REFERENCES `quotes` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);
